/* structures-pointers_20201208a.c tue Dec 08 2020 14:30:00 ramsubbu */
/*

Module: structures-pointers_20201208a.c
Function:
C program for Function Pointer Example.
Version:
 V3.XXa tue Dec 08 2020 14:30:00 ramsubbu Edit level 01

Copyright notice:
 This file copyright (C) 2020 by
 MCCI Corporation
 3520 Krums Corners Road
 Ithaca, NY 14850
 An unpublished work. All rights reserved.

 This file is proprietary information, and may not be disclosed or
 copied without the prior permission of MCCI Corporation.
Author:
 Rama Subbu M, MCCI December 2020
Revision history:
 1.00A tue Dec 08 2020 14:30:00  ramsubbu
 Module created.
*/

#include <stdio.h>
#include "structures-pointers_20201208a.h"

/****************************************************************************\
|
| Manifest constants & typedefs.
|
| This is strictly for private types and constants which will not
| be exported.
|
\****************************************************************************/


/****************************************************************************\
|
| Read-only data.
|
| If program is to be ROM-able, these must all be tagged read-only
| using the ROM storage class; they may be global.
|
\****************************************************************************/


/****************************************************************************\
|
| VARIABLES:
|
| If program is to be ROM-able, these must be initialized
| using the BSS keyword. (This allows for compilers that require
| every variable to have an initializer.) Note that only those
| variables owned by this module should be declared here, using the BSS
| keyword; this allows for linkers that dislike multiple declarations
| of objects.
|
\****************************************************************************/

/*
Name: main()

Function:
	main function to start the execution.

Definition:
	int main (void);

Description:
	Main function from where the execution of the program starts.

Returns:
	Returns Zero.

Notes:
	None
*/

void main ()
        {
        struct database *ptr ;
        struct database person;

        ptr = &person;
        

        printf ("\nEnter name of the person");
        scanf ("%s",ptr->name);
        
        printf ("\nEnter aadhar id of the person");
        scanf ("%s",ptr->aadhar);

        printf ("\nEnter the covid status of the person");
        scanf("%s",ptr->covidstatus);

        printf ("\nStudent record:\n");    
        printf ("\nName: %s, \nAadharID: %s, \nStatus: %s\n",ptr->name ,ptr->aadhar ,ptr->covidstatus);    
        getch ();        
        }

      
        


        
